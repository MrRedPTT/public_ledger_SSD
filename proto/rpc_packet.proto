syntax = "proto3";

package rpcpacket;

service PacketSending {
  rpc Ping(PingPacket) returns (PongPacket);
  // rpc Store(StorePacket) returns (StoreStatus);  // Kademlia
  rpc FindNode(FindNodeRequest) returns (FindNodeResponse); // Kademlia
  // rpc FindValue // Kademlia
  // rpc SendTransaction // BlockChain
  // rpc SendBlock // BlockChain
  // rpc GetBlock(id) // BlockChain => Ask for a block already in the blockchain
}


message Address {
  string ip = 1;
  uint32 port = 2;
}

message PingPacket {
    // Maybe add the Identifier entry
    Address src = 1;
    Address dst = 2;
}

message PongPacket {
  Address src = 1;
  Address dst = 2;
}

message FindNodeRequest {
  bytes id = 1;
}

message Node {
  bytes id = 1;        // Fixed-size array of 256 bytes
  string ip = 2;
  uint32 port = 3;
}

message kNearestNodes {
  repeated Node nodes = 1;
}

enum FindNodeResponseType {
  UNKNOWN_TYPE = 0; // Some weird value was passed for the enum
  ReRoute = 1; // The node was not found, return the up to k nearest nodes from the target id
  TargetNode = 2; // The node was found, returning it
}

message FindNodeResponse {
  FindNodeResponseType ResponseType = 1; // This is here so we can now which type of response we are getting
  Node node = 2;
  kNearestNodes list = 3;
  string error = 4; // In case an error occurs we can communicate that to the "client"
}
